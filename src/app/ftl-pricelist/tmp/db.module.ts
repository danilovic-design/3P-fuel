// distance from Ystad to the postcode center
export const swedenKilometers = [
  [630], // 1 - Stockholm
  [70, 60, 70, 60, 40, 120, 100, 30, 100, 90], // 2 - Malmö
  [190, 230, 260, 260, 200, 220, 220, 140, 250, 280], // 3 - Halmstad
  [330, 330, 330, 330, 400, 410, 400, 390], // 4 - Göteborg
  [340, 310, 350, 390, 380, 290, 270, 340, 420, 340], // 5 - Boras
  [460, 470, 380, 580, 520, 580, 540, 540, 640, 480], // 6 - Norrköping
  [510, 520, 600, 610, 640, 680, 700, 640, 800, 800], // 7 - Örebro
  [790, 740, 850, 1100, 940, 990, 1010, 1040, 1160, 1140], // 8 - Gävle
  [1250, 1350, 1290, 1380, 1470, 1520, 1650, 1520, 1730, 1680], // 9 - 1250
];

// distance from Cieszyn to postcode center and then the base (Göd)
export const hungaryKilometers = [
  [390, 450, 450], // 1 -Budapest,
  [380, 390, 430, 500, 580, 430, 320, 510, 500, 470], // 2 -Szentendre
  [380, 390, 420, 470, 530, 530, 490, 530, 550, 590], // 3 - Hatvan
  [690, 750, 730, 770, 700, 740, 820, 780, 800, 820], // 4 - Debrecen
  [580, 460, 600, 640, 660, 690, 800, 830, 880, 780], // 5 - Szolnok
  [560, 620, 650, 690, 680, 800, 700, 720, 770, 780], // 6 - Kecskemét
  [600, 740, 780, 840, 830, 910, 850, 840, 890, 960], // 7 - Sárbogárd
  [540, 580, 610, 700, 640, 620, 580, 750, 780, 750], // 8 - Székesfehérvár
  [510, 550, 550, 570, 700, 670, 640, 720, 710, 740], // 9 - Győr
];

export const expectedImport = [
  [1400], // 1 - Stockholm import
  [900], // 2 - Malmö import
  [950], // 3 - Halmstad
  [1100], // 4 - Göteborg
  [1100], // 5 - Boras
  [1200], // 6 - Norrköping
  [1200], // 7 - Örebro
  [1400], // 8 - Gävle
  [1400], // 9 - Umea
];
